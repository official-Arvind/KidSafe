// Generated by view binder compiler. Do not edit!
package com.github.muneebwanee.dash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.muneebwanee.dash.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPhotoBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView card;

  @NonNull
  public final TextView dateItemPhoto;

  @NonNull
  public final ImageView imgItemPhoto;

  @NonNull
  public final CircleImageView imgSelectedPhoto;

  @NonNull
  public final CardView itemClickPhoto;

  @NonNull
  public final LinearLayout itemPalette;

  @NonNull
  public final RelativeLayout linear;

  @NonNull
  public final TextView nameItemPhoto;

  private ItemPhotoBinding(@NonNull CardView rootView, @NonNull CardView card,
      @NonNull TextView dateItemPhoto, @NonNull ImageView imgItemPhoto,
      @NonNull CircleImageView imgSelectedPhoto, @NonNull CardView itemClickPhoto,
      @NonNull LinearLayout itemPalette, @NonNull RelativeLayout linear,
      @NonNull TextView nameItemPhoto) {
    this.rootView = rootView;
    this.card = card;
    this.dateItemPhoto = dateItemPhoto;
    this.imgItemPhoto = imgItemPhoto;
    this.imgSelectedPhoto = imgSelectedPhoto;
    this.itemClickPhoto = itemClickPhoto;
    this.itemPalette = itemPalette;
    this.linear = linear;
    this.nameItemPhoto = nameItemPhoto;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPhotoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPhotoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_photo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPhotoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.date_item_photo;
      TextView dateItemPhoto = ViewBindings.findChildViewById(rootView, id);
      if (dateItemPhoto == null) {
        break missingId;
      }

      id = R.id.img_item_photo;
      ImageView imgItemPhoto = ViewBindings.findChildViewById(rootView, id);
      if (imgItemPhoto == null) {
        break missingId;
      }

      id = R.id.img_selected_photo;
      CircleImageView imgSelectedPhoto = ViewBindings.findChildViewById(rootView, id);
      if (imgSelectedPhoto == null) {
        break missingId;
      }

      CardView itemClickPhoto = (CardView) rootView;

      id = R.id.item_palette;
      LinearLayout itemPalette = ViewBindings.findChildViewById(rootView, id);
      if (itemPalette == null) {
        break missingId;
      }

      id = R.id.linear;
      RelativeLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.name_item_photo;
      TextView nameItemPhoto = ViewBindings.findChildViewById(rootView, id);
      if (nameItemPhoto == null) {
        break missingId;
      }

      return new ItemPhotoBinding((CardView) rootView, card, dateItemPhoto, imgItemPhoto,
          imgSelectedPhoto, itemClickPhoto, itemPalette, linear, nameItemPhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
