// Generated by view binder compiler. Do not edit!
package com.github.muneebwanee.dash.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.muneebwanee.dash.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewChangeCodeAccessBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText currentAccessCode;

  @NonNull
  public final EditText newAccessCode;

  @NonNull
  public final EditText repeatAccessCode;

  private ViewChangeCodeAccessBinding(@NonNull LinearLayout rootView,
      @NonNull EditText currentAccessCode, @NonNull EditText newAccessCode,
      @NonNull EditText repeatAccessCode) {
    this.rootView = rootView;
    this.currentAccessCode = currentAccessCode;
    this.newAccessCode = newAccessCode;
    this.repeatAccessCode = repeatAccessCode;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewChangeCodeAccessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewChangeCodeAccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_change_code_access, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewChangeCodeAccessBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.current_access_code;
      EditText currentAccessCode = ViewBindings.findChildViewById(rootView, id);
      if (currentAccessCode == null) {
        break missingId;
      }

      id = R.id.new_access_code;
      EditText newAccessCode = ViewBindings.findChildViewById(rootView, id);
      if (newAccessCode == null) {
        break missingId;
      }

      id = R.id.repeat_access_code;
      EditText repeatAccessCode = ViewBindings.findChildViewById(rootView, id);
      if (repeatAccessCode == null) {
        break missingId;
      }

      return new ViewChangeCodeAccessBinding((LinearLayout) rootView, currentAccessCode,
          newAccessCode, repeatAccessCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
